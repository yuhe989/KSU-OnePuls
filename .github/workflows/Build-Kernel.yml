name: Build Kernel
on:
  workflow_dispatch:
   inputs:
      CPU:
        description: "分支"
        required: true
        default: 'sm8475'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'waipio'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: '12'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '5.10'
      FEIL:
        description: "机型/Model"
        required: true
        type: choice
        options:
          - oneplus_ace3_pro_v
          - oneplus_pad2_v
          - oneplus_ace5
          - oneplus_13r
          - oneplus12_v
          - oneplus_11r_v
          - oneplus_ace2_v
      KSU_BRANCH:
        description: "KSU分支"
        required: true
        type: choice
        options:
          - MKSU
          - KSUN
      SUSFS_ENABLED:
        description: "实验性SUSFS配置"
        required: true
        type: boolean
        default: true    
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      RELEASE_NAME: "*TEST BUILD* OnePlus Kernels With KSU & SUSFS *TEST BUILD*"
  
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          
      - name: Configure Git
        run: |
         git config --global user.name "build"
         git config --global user.email "3436378798@qq.com"
         
      - name: Output build information
        run: |
         echo "机型：${{ github.event.inputs.FEIL }} KSU分支：${{ github.event.inputs.KSU_BRANCH }}"
         
      - name: Install dependencies
        run: |
         sudo apt update && sudo apt upgrade -y
         sudo apt install -y python3 git curl

      - name: Install repo tool
        run: |
         curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
         chmod a+x ~/repo
         sudo mv ~/repo /usr/local/bin/repo
         
      - name: Initialize repo and sync
        run: |
         mkdir kernel_workspace && cd kernel_workspace
         repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1
         repo sync
         
      - name: Modify kernel version parameters
        run: |
         cd kernel_workspace                  
         rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
         rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
         sed -i 's/ -dirty//g' kernel_platform/common/scripts/setlocalversion
         sed -i 's/ -dirty//g' kernel_platform/msm-kernel/scripts/setlocalversion
         sed -i 's/ -dirty//g' kernel_platform/external/dtc/scripts/setlocalversion
         #sed -i 's/ -dirty//g' kernel_platform/build/kernel/kleaf/workspace_status_stamp.py
         sed -i '$s|echo "\$res"|echo "$res-Mortis"|' kernel_platform/common/scripts/setlocalversion            
         sed -i '$s|echo "\$res"|echo "$res-Mortis"|' kernel_platform/msm-kernel/scripts/setlocalversion

      - name: Add KernelSU
        run: |
          cd kernel_workspace/kernel_platform
          if [ "${{ github.event.inputs.KSU_BRANCH }}" == "KSUN" ]; then
            echo "Adding KernelSU Next..."
            curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh" | bash
            cd ./KernelSU-Next
            KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
            echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
            sed -i "s/DKSU_VERSION=11998/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile         
          elif [ "${{ github.event.inputs.KSU_BRANCH }}" == "MKSU" ]; then
            echo "Adding KernelSU MKSU..."
            curl -LSs "https://raw.githubusercontent.com/5ec1cff/KernelSU/main/kernel/setup.sh" | bash
            cd KernelSU
            KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
            echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
            sed -i "s/DKSU_VERSION=16/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
          fi
                 
      - name: Set up susfs
        run: |
           cd kernel_workspace
           git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
           git clone https://github.com/TanakaLun/kernel_patches4mksu.git
           cd kernel_platform
           cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-android${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
           cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
           cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
           # Apply patches
           if [ "${{ github.event.inputs.KSU_BRANCH }}" == "KSUN" ]; then
             echo "Applying SUSFS patches for KernelSU-Next..."
             cd ./KernelSU-Next
             cp ../../kernel_patches4mksu/next/0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch ./
             patch -p1 --forward < 0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch || true
           elif [ "${{ github.event.inputs.KSU_BRANCH }}" == "MKSU" ]; then
             echo "Applying SUSFS patches for MKSU..."
             cd ./KernelSU
             cp ../../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./
             patch -p1 --forward < 10_enable_susfs_for_ksu.patch || true
            
             echo "Applying MKSU specific SUSFS patch..."
             cp ../../kernel_patches4mksu/mksu/mksu_susfs.patch ./
             patch -p1 < mksu_susfs.patch || true
             cp ../../kernel_patches4mksu/mksu/fix.patch ./
             patch -p1 < fix.patch || true
             cp ../../kernel_patches4mksu/mksu/vfs_fix.patch ./
             patch -p1 < vfs_fix.patch
           else
             echo "Invalid KernelSU variant selected!"
             exit 1
           fi
            cd ../common
            patch -p1 < 50_add_susfs_in_gki-android${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true           
            git add -A && git commit -a -m "BUILD Kernel"
            cd ..
            cd ./msm-kernel && git add -A && git commit -a -m "BUILD Kernel"
            cd ..
           
      - name: Apply Hide Stuff Patches
        run: |
          cd kernel_workspace/kernel_platform/common
          cp ../../kernel_patches4mksu/69_hide_stuff.patch ./
          patch -p1 -F 3 < 69_hide_stuff.patch
                     
      - name: Apply New Hooks Patches
        run: |
          cd kernel_workspace/kernel_platform/common
          # Apply additional patch
          cp ../../kernel_patches4mksu/hooks/new_hooks.patch ./
          patch -p1 -F 3 < new_hooks.patch
          
      - name: Add SUSFS Configuration Settings
        if: ${{ github.event.inputs.SUSFS_ENABLED == 'true' }}
        run: |
          cd kernel_workspace/kernel_platform
          echo "Adding configuration settings to gki_defconfig..."

          # Add KSU configuration settings
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_WITH_KPROBES=n" >> ./common/arch/arm64/configs/gki_defconfig

          # Add SUSFS configuration settings
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig          
          # Add additional tmpfs config setting
          # echo "CONFIG_TMPFS_XATTR=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_TMPFS_POSIX_ACL=y" >> ./common/arch/arm64/configs/gki_defconfig

          # # Add additional config setting
          # echo "CONFIG_IP_NF_TARGET_TTL=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_IP6_NF_TARGET_HL=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_IP6_NF_MATCH_HL=y" >> ./common/arch/arm64/configs/gki_defconfig

          # Remove check_defconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki
                              
      - name: Build kernel 
        run: |
         cd kernel_workspace/kernel_platform
         if [ -f "./build_with_bazel.py" ]; then
         #if [ "${{ github.event.inputs.CPU }}" == "sm8650" ]; then
          echo "build_with_bazel.py"
          LTO=thin ./build_with_bazel.py -t ${{ github.event.inputs.CPUD }} gki
         else
          LTO=thin ./oplus/build/oplus_build_kernel.sh ${{ github.event.inputs.CPUD }} gki
         fi

      - name: Make AnyKernel3
        run: |
         git clone https://github.com/TanakaLun/AnyKernel3 --depth=1
         rm -rf ./AnyKernel3/.git
            IMAGE_PATH="kernel_workspace/kernel_platform/out/msm-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.CPUD }}-gki/dist/Image"
            ALTERNATE_IMAGE_PATH="kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist/Image"
            DESTINATION_PATH="./AnyKernel3/"
            if [ -f "$IMAGE_PATH" ]; then
                cp "$IMAGE_PATH" "$DESTINATION_PATH"
            elif [ -f "$ALTERNATE_IMAGE_PATH" ]; then
                cp "$ALTERNATE_IMAGE_PATH" "$DESTINATION_PATH"
            else
                exit 1
            fi
                   
      - name: Download SUSFS Module
        run: |
         wget https://github.com/sidex15/ksu_module_susfs/releases/latest/download/ksu_module_susfs_1.5.2+.zip
         cp ksu_module_susfs_1.5.2+.zip ./AnyKernel3/

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
         name: ${{ github.event.inputs.KSU_BRANCH }} _${{ github.event.inputs.FEIL }}_${{ env.KSUVER }}
         path: ./AnyKernel3/*
         
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded-artifacts
          
      - name: Upload Release Assets Dynamically
        run: |
          # Loop through all files in the downloaded-artifacts directory
          for file in ./downloaded-artifacts/*; do
              # Skip directories
              if [ -d "$file" ]; then
                  continue
              fi

              # Upload the file to the GitHub release
              echo "Uploading $file..."
              gh release upload ${{ github.event.inputs.KSU_BRANCH }}-SUSFS $file
          done
        env:
            GITHUB_TOKEN: ${{ secrets.TOKEN }}
